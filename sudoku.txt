#### HOW TO USE ####

First enter the maximum number of solutions you want. Enter a negative number or 0 if you want all the solutions. Note the program may not terminate if there are two many solutions, e.g. if the input is an empty board.

Then enter the puzzle. The puzzle can contain any extra characters not specified in the variable characters or empty. After you are done press ctrl-D. See below for an example run.

#### RESULTS ####

Firstly, the solver statistics will be printed. It shows for each square the following values: (solution, number of times rule 1 was used, number of times rule 2 was used, number of times search was used). The number of times search was used can be used to gauge the difficulty of the puzzle.

Secondly, the solutions to the puzzle is printed.

#### Methodology ####

The solver uses constraint propagation and search. The core idea was based off Peter's Norvig sudoku solver. Some ideas from Richard Bird were also used.

The current solver represent an improvement in that it shows the statistics and it is able to generate all solutions lazily. Implementing the solver in Haskell was also a challenge because of the purity of haskell, which means everything must be passed by direct data flow from function to function. More information on how the code works can be found as comments in the source code.

#### EXAMPLE RUN ####

[ong@T460p-Arch Haskell]$ ./sudoku
-1 
8........
..36.....
.7..9.2..
.5...7...
....457..
...1...3.
..1....68
..85...1.
.9....4..
("8",0,0,0)("1",7,0,1)("2",7,0,1)("7",5,3,0)("5",7,0,1)("3",7,0,1)("6",8,0,0)("4",7,0,1)("9",8,0,0)
("9",8,0,0)("4",7,0,1)("3",1,0,0)("6",1,0,0)("8",7,0,1)("2",8,0,0)("1",8,0,0)("7",5,3,0)("5",8,0,0)
("6",8,0,0)("7",2,0,0)("5",8,0,0)("4",6,2,0)("9",2,0,0)("1",6,2,0)("2",2,0,0)("8",8,0,0)("3",6,2,0)
("1",8,0,0)("5",1,0,0)("4",8,0,0)("2",8,0,0)("3",6,2,0)("7",1,0,0)("8",8,0,0)("9",8,0,0)("6",8,0,0)
("3",8,0,0)("6",8,0,0)("9",7,1,0)("8",8,0,0)("4",2,0,0)("5",2,0,0)("7",3,0,0)("2",8,0,0)("1",7,1,0)
("2",7,1,0)("8",8,0,0)("7",7,1,0)("1",4,0,0)("6",7,1,0)("9",5,3,0)("5",7,1,0)("3",2,0,0)("4",7,1,0)
("5",5,3,0)("2",7,0,1)("1",1,0,0)("9",8,0,0)("7",8,0,0)("4",7,1,0)("3",7,0,1)("6",2,0,0)("8",2,0,0)
("4",5,3,0)("3",8,0,0)("8",2,0,0)("5",3,0,0)("2",8,0,0)("6",8,0,0)("9",7,0,1)("1",4,0,0)("7",7,1,0)
("7",8,0,0)("9",4,0,0)("6",8,0,0)("3",8,0,0)("1",5,3,0)("8",8,0,0)("4",6,0,0)("5",7,1,0)("2",8,0,0)

812753649
943682175
675491283
154237896
369845721
287169534
521974368
438526917
796318452
